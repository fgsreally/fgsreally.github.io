(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{513:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("介绍")]),t._v(" "),a("p",[t._v("vue的动画标签"),a("code",[t._v("transition")]),a("br")])]),t._v(" "),a("h3",{attrs:{id:"vue动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue动画"}},[t._v("#")]),t._v(" vue动画")]),t._v(" "),a("p",[t._v("vue动画本身没啥说的，就是套了一个transition开始写css就行了，麻烦的是实际使用动画的时候，往往是跟路由绑在一起的")]),t._v(" "),a("p",[t._v("然后我就看到了各种诡异的玩法...")]),t._v(" "),a("h2",{attrs:{id:"基本知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本知识"}},[t._v("#")]),t._v(" 基本知识")]),t._v(" "),a("p",[t._v("直接加transition，如果某路由/组件专用，就加在template 里面，如果共用，就加在router-view里面")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-view")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-slot")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ Component }"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":is")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("transition")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-view")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("这个看上去挺阳间的————所以基本没啥用，复杂一点的情况完全处理不了")]),t._v(" "),a("h2",{attrs:{id:"延申"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延申"}},[t._v("#")]),t._v(" 延申")]),t._v(" "),a("p",[t._v("（这是在前一个基础上多做的，并不是和1反着来）所谓的复杂情况，那自然就是跟路由相关，在某某路径上，才会执行某某的动画")]),t._v(" "),a("blockquote",[a("p",[t._v("和路由有关，其实就又有一大堆说法了，因为影响因素是路由，那么一定需要能读到路由的东西")])]),t._v(" "),a("p",[t._v("也就有了")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("watch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$route'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" toDepth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fromDepth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transitionName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" toDepth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" fromDepth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slide-right'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'slide-left'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("就是读"),a("code",[t._v("$route")]),t._v("，再决定安置什么动画")]),t._v(" "),a("p",[t._v("亦或者在"),a("strong",[t._v("路由守卫")]),t._v("处去读取，写法也差不多")]),t._v(" "),a("p",[t._v("但这样的话，有几个页面就要做多少次判断，前者还好，路由守卫的话绝对人直接写没")]),t._v(" "),a("blockquote",[a("p",[t._v("如果要改请让我直接去世")])]),t._v(" "),a("p",[t._v("这种重复出现在各种地方的东西，就需要有个东西去做状态管理，\n基本上又有两个思路了，")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("标准的状态管理那自然就是vuex，把所有路由及其对应的动画先记录在这，每个页面去watch然后去vuex里面找就行了。虽然写起来还是自闭，但改起来没难度")])]),t._v(" "),a("li",[a("p",[t._v("第二个想法又跟路由有关了，因为此时并不需要真正的状态管理，因为哪条路径执行对应动画实际上是写死的，我们只需要一个状态存储加读取即可，而所谓的router本质上仍是个对象，仍可以将信息存进去并读出来，也就是把对应的动画名写进注册时的元信息，然后在路由守卫中读取对应的元信息设置对应的动画即可")])])]),t._v(" "),a("blockquote",[a("p",[t._v("这是我偶然偷瞄抄来的，思路清奇")])]),t._v(" "),a("p",[t._v("此外注意一下过渡模式：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("："),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//淡入和淡出过渡同时发生")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("out："),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//新元素首先淡入。 然后当前元素淡出。")]),t._v("\nout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("："),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//当前元素先淡出。 然后新元素开始淡入。")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);