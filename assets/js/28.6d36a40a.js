(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{510:function(t,a,s){"use strict";s.r(a);var e=s(4),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("介绍")]),t._v(" "),s("p",[t._v("关于js 中的二进制"),s("br")])]),t._v(" "),s("h3",{attrs:{id:"二进制结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二进制结构"}},[t._v("#")]),t._v(" 二进制结构")]),t._v(" "),s("h2",{attrs:{id:"标准模式-困难"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标准模式-困难"}},[t._v("#")]),t._v(" 标准模式(困难)")]),t._v(" "),s("p",[t._v("先从这一段看起")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Int32Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nx1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Uint8Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nx2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nx1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2`")]),t._v("\n")])])]),s("p",[t._v("相当于arraybuffer得到一块二进制数据，然后再在这个长度自由的部分上面利用视图去写入固定长度的东西")]),t._v(" "),s("p",[t._v("这玩意儿我只见过两种用法")]),t._v(" "),s("blockquote",[s("p",[t._v("（虽然按理来讲应该很有用，因为这个类型是跟c一致的，但如果需要和c交互，更多还是用专用的库去做类型转换，如ref）")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("视觉方面的，webgl每写一个东西都是arraybuffer进出缓冲区\n其实我感觉3.js好处就是把这个底层部分屏蔽了。。太糟心了\n还有canvas那个元素操作也是")])]),t._v(" "),s("li",[s("p",[t._v("请求方面的，也就是"),s("code",[t._v("fetch，ajax，websocket")]),t._v("那些，我写过一个基于"),s("code",[t._v("protobuf")]),t._v("的前后端微服务一整套的东西，就是要在响应体里面搞出来个arraybuffer。")])])]),t._v(" "),s("blockquote",[s("p",[t._v("完全手动操作这个挺不靠谱的，还是要有某个约定来进行读取，\n不想操作的话就最好直接响应体为blob")])]),t._v(" "),s("h2",{attrs:{id:"简易模式-不需要知道结构究竟是几位的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简易模式-不需要知道结构究竟是几位的"}},[t._v("#")]),t._v(" 简易模式(不需要知道结构究竟是几位的)")]),t._v(" "),s("p",[t._v("像blob这个对象，就有点像基于约定的"),s("code",[t._v("arraybuffer")]),t._v("，变成一个js对象，用起来就舒服多了，直接往里面导就行了，切片什么的直接push进去就拼凑起来了，读size属性就看到长度，\n配合"),s("code",[t._v("URL.createObjectURL(blob)")]),t._v("直接用就行")]),t._v(" "),s("p",[t._v("注意要"),s("code",[t._v("URL.revokeObjectURL()")]),t._v("释放掉")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("URL.createObjectURL()")]),t._v("与"),s("code",[t._v("FileReader.readAsDataURL()")]),t._v("功能差不多\n但后者返回的是超长base64字符串，与文件大小相关")])])])}),[],!1,null,null,null);a.default=r.exports}}]);