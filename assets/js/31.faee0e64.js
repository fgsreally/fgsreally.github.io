(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{515:function(v,_,t){"use strict";t.r(_);var a=t(4),e=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[v._v("介绍")]),v._v(" "),t("p",[v._v("关于"),t("code",[v._v("Napi")]),v._v("的使用以及"),t("code",[v._v("node")]),v._v("的相关扩展"),t("br")])]),v._v(" "),t("h2",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[v._v("#")]),v._v(" 介绍")]),v._v(" "),t("p",[v._v("我曾正儿八经研究过这个东西相当长的一段时间")]),v._v(" "),t("p",[v._v("作为node最直接的拓展能力，官方近乎唯一的操作底层的手段，但基本没有相关的博客文章，有也是一些 hellow world，官方的example也只能用抽象来形容（因为里面大量生僻的api，而文档对于这些生僻的api的描述基本就是一句带过，要是没有最外面哪个js文件跑一遍，很难知道其具体作用")]),v._v(" "),t("h2",{attrs:{id:"特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[v._v("#")]),v._v(" 特点")]),v._v(" "),t("p",[v._v("napi整体的特点就是，")]),v._v(" "),t("ul",[t("li",[v._v("写法奇怪（即全部都是返回值是一个关于执行是否顺利的状态值，输出值全是参数形式）")]),v._v(" "),t("li",[v._v("api名称奇怪，然后每做一步都要转换（js的参数进来转一遍，c里面跑来跑去又要转，回到js之前还要转，每个参数都要转）")]),v._v(" "),t("li",[v._v("还有很多引用，析构，引用释放这种折磨人的东西。而且不可延续原有的继承关系。")])]),v._v(" "),t("h2",{attrs:{id:"编写流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编写流程"}},[v._v("#")]),v._v(" 编写流程")]),v._v(" "),t("p",[v._v("写的时候基本就是把例子中的模板copy下来（有对象形式的，和面向过程的），找到和js接驳的部分，先写好c的函数方法，再在接驳的部分对参数转化并注入c方法，出来的值再转化，再更改一下比如引用释放对应的参数")]),v._v(" "),t("h2",{attrs:{id:"目的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目的"}},[v._v("#")]),v._v(" 目的")]),v._v(" "),t("p",[t("code",[v._v("napi")]),v._v("主要的意义在于三个东西，一是结构，搞出来js没有的结构，二是性能，三是利用原有c的函数")]),v._v(" "),t("ul",[t("li",[v._v("关于一，我写过一个动态生成"),t("code",[v._v("bit")]),v._v("的结构，用于"),t("code",[v._v("bitmap")]),v._v("的算法，用的是那个"),t("code",[v._v("dynamic")]),v._v("库（应该叫这个吧）")])]),v._v(" "),t("blockquote",[t("p",[v._v("有一说一这帮人文档和example都写得极度玄幻\n"),t("br")])]),v._v(" "),t("ul",[t("li",[v._v("二的话，但其实v8的计算性能相当猛，如果是一般的东西直接js算就行了，在js和c中转换的时候浪费的时间估计v8都下班了，这可能就是napi不常见的原因")])]),v._v(" "),t("blockquote",[t("p",[v._v("实际上napi和事件循环是我认为生产时对于底层操作的极限了，也就是说当需要执行一些正常做不到的行为时，最多就做到这里，如果需要再往下到什么libuv的话，这个事情大概率思路就错了。")]),v._v(" "),t("blockquote",[t("p",[v._v("libuv知道个句柄是啥就行了。。真没必要认真搞，我看那个"),t("code",[v._v("uv_xxx")]),v._v("看得人都没了")])])]),v._v(" "),t("br"),v._v(" "),t("ul",[t("li",[v._v("关于3的解决方案是我在别的地方偷来的，先编译成"),t("code",[v._v(".so")]),v._v("文件，在js用ref库转换成c的结构，用ffi库去直接调用c中的接口（注意要转成指针是"),t("code",[v._v("pointer")]),v._v("，并不是c中那种"),t("code",[v._v("int*")]),v._v("，"),t("code",[v._v("char*")])])]),v._v(" "),t("blockquote",[t("p",[v._v("没用过，但我感觉还是有说法的")])]),v._v(" "),t("p",[v._v("调用其他语言还有这两种情况")]),v._v(" "),t("ol",[t("li",[t("code",[v._v("edge.js")]),v._v("，调用"),t("code",[v._v("c# py")])]),v._v(" "),t("li",[t("code",[v._v("boa")]),v._v(" ，阿里那个深度学习的pipcook里面搞出来的东西，调用py。从api的写法是相当简单，但我对pipcook不太信任")])]),v._v(" "),t("h3",{attrs:{id:"总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结：")]),v._v(" "),t("p",[v._v("当需要非js能力去解决的问题（或者是js解决方案不可接受时），优先使用js调用其他语言的库或包，最后在考虑使用napi")])])}),[],!1,null,null,null);_.default=e.exports}}]);